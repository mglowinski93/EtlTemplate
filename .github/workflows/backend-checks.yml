name: Run backend code checks

defaults:
  run:
    shell: bash
    working-directory: "backend/"

on:
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: "infrastructures.config.settings"
      SECRET_KEY: "oy=w_*&t430ft=41u82l$9f!hjn&#qy^$)el@x&!6vf*8n6!yc"
      ALLOWED_HOSTS: "localhost"
      CORS_ALLOWED_ORIGINS: "http://localhost:8080"
      TZ: "Etc/UCT"
      POSTGRES_DB_HOST: "localhost"
      POSTGRES_DB_PORT: 5432
      POSTGRES_DB_NAME: "management_application_template"
      POSTGRES_DB_USER: "management_application_template_user"
      POSTGRES_DB_PASSWORD: "management_application_template_password"

    services:
      db:
        image: "postgres:15"
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: "management_application_template"
          POSTGRES_USER: "management_application_template_user"
          POSTGRES_PASSWORD: "management_application_template_password"
    steps:
      - name: Cache python dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-python
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install libraries
        run: sudo apt-get install -y ffmpeg

      - name: Install python dependencies
        run: pip install -r requirements/development.txt

      - name: Run black check
        run: make black-check

      - name: Lint code check
        run: make ruff-check

      - name: Run mypy check
        run: make mypy-check

      - name: Run bandit check
        run: make bandit-check

      - name: Run import linter check
        run: make import-linter-check

      - name: Run migrations check
        run: make migrations-check

      - name: Run tests
        run: make tests

      - name: Run isort 
        run: make isort-check